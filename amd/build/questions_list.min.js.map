{"version":3,"file":"questions_list.min.js","sources":["../src/questions_list.js"],"sourcesContent":["import notification from 'core/notification';\nimport ajax from 'core/ajax';\nimport * as Str from 'core/str';\n\nexport const init = () => {\n    delete_question();\n};\n\n/**\n * Delete a content\n */\nfunction delete_question() {\n    const buttons = document.querySelectorAll('.block-ai-assistant-delete-question');\n    buttons.forEach(button => {\n        button.addEventListener('click', function () {\n            const row = this.closest('tr');\n            const questionid = this.getAttribute('data-questionid');\n            var courseid = this.getAttribute('data-courseid');\n            // Pop up notificaiton to confirm delete\n            notification.confirm(Str.get_string('delete', 'block_ai_assistant'),\n                Str.get_string('delete_question_help', 'block_ai_assistant'),\n                Str.get_string('delete', 'block_ai_assistant'),\n                Str.get_string('cancel', 'block_ai_assistant'), function () {\n                    //Delete the record\n                    var delete_content = ajax.call([{\n                        methodname: 'block_ai_assistant_delete_question_file',\n                        args: {\n                            'questionid': questionid,\n                            'courseid': courseid\n                        }\n                    }]);\n\n                    delete_content[0].done(function () {\n                        row.parentNode.removeChild(row);\n                    }).fail(function () {\n                        alert('An error has occurred. The record was not deleted');\n                    });\n                });\n        });\n    });\n}"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","__esModule","default","_notification","_ajax","Str","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_exports","init","document","querySelectorAll","forEach","button","addEventListener","row","this","closest","questionid","getAttribute","courseid","notification","confirm","get_string","ajax","methodname","args","done","parentNode","removeChild","fail","alert"],"mappings":"8IAEgC,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,CAAA,SAAAI,uBAAAJ,GAAAA,OAAAA,GAAAA,EAAAK,WAAAL,EAAAM,CAAAA,QAAAN,EAAA,8EAFhCO,cAAAH,uBAAAG,eACAC,MAAAJ,uBAAAI,OACAC,IAAgC,SAAAT,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAAL,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAM,MAAAA,CAAAA,QAAAN,GAAAG,IAAAA,EAAAJ,yBAAAG,GAAA,GAAAC,GAAAA,EAAAO,IAAAV,GAAA,OAAAG,EAAAQ,IAAAX,GAAA,IAAAY,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAlB,EAAAkB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAApB,EAAAkB,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAjB,EAAAkB,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAlB,EAAAkB,GAAAN,OAAAA,EAAAN,QAAAN,EAAAG,GAAAA,EAAAmB,IAAAtB,EAAAY,GAAAA,CAAA,CAAhCW,CAAAd,KAIEe,SAAAC,KAFkBA,KAQAC,SAASC,iBAAiB,uCAClCC,SAAQC,SACZA,OAAOC,iBAAiB,SAAS,WAC7B,MAAMC,IAAMC,KAAKC,QAAQ,MACnBC,WAAaF,KAAKG,aAAa,mBACrC,IAAIC,SAAWJ,KAAKG,aAAa,iBAEjCE,cAAAA,QAAaC,QAAQ7B,IAAI8B,WAAW,SAAU,sBAC1C9B,IAAI8B,WAAW,uBAAwB,sBACvC9B,IAAI8B,WAAW,SAAU,sBACzB9B,IAAI8B,WAAW,SAAU,uBAAuB,WAEvBC,MAAAA,QAAKpB,KAAK,CAAC,CAC5BqB,WAAY,0CACZC,KAAM,CACFR,WAAcA,WACdE,SAAYA,aAIL,GAAGO,MAAK,WACnBZ,IAAIa,WAAWC,YAAYd,IAC/B,IAAGe,MAAK,WACJC,MAAM,oDACV,GACJ,GACR,GAAE,GAjCW,CAmCpB"}