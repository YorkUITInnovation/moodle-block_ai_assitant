{"version":3,"file":"training_status.min.js","sources":["../src/training_status.js"],"sourcesContent":["import ajax from 'core/ajax';\n\nexport const init = () => {\n    get_training_status();\n    get_question_training_status();\n};\n\n/**\n * Delete a content\n */\nfunction get_training_status() {\n    // Check to see if the button exists\n    if (!document.getElementById('block-ai_assistant-training-status-id')) {\n        return;\n    }\n    // Get element value for element with id block-ai_assistant-training-status-id\n    var statusElement = document.getElementById('block-ai_assistant-training-status-id');\n    // Get cria_file_id from data atrribute in statusId element\n    var courseId = statusElement.getAttribute('data-course_id');\n    // Get statusId from element value\n    var statusId = statusElement.value;\n\n    // if statusId does not equal 1, repeat the ajax call every 10 seconds that checks the training staus\n    // if statusId equals 1, stop the ajax call\n    if (statusId !== \"4\" && statusId !== \"1\") {\n        setInterval(function () {\n            var get_status = ajax.call([{\n                methodname: 'block_ai_assistant_get_training_status',\n                args: {\n                    'courseid': courseId\n                }\n            }]);\n\n            get_status[0].done(function (data) {\n                // Convert data from JSON to object\n                data = JSON.parse(data);\n                // Update the element value for element with id block-ai_assistant-training-status-id\n                document.getElementById('block-ai_assistant-training-status-id').value = data.training_status_id;\n                // Update the element value for element with id block-ai-assistant-training-status\n                document.getElementById('block-ai-assistant-training-status').innerHTML = data.training_status;\n                // Exit setInterval\n                if (data.training_status_id === 1) {\n                    clearInterval();\n                }\n            }).fail(function () {\n                alert('An error has occurred. Could not update the training status');\n            });\n        }, 5000);\n    }\n}\n\n/**\n * Delete a content\n */\nfunction get_question_training_status() {\n    // Check to see if the button exists\n    if (!document.getElementById('block-ai_assistant-question-training-status-id')) {\n        return;\n    }\n    // Get element value for element with id block-ai_assistant-training-status-id\n    var statusElement = document.getElementById('block-ai_assistant-question-training-status-id');\n    // Get cria_file_id from data atrribute in statusId element\n    var questionId = statusElement.getAttribute('data-question_id');\n    // Get statusId from element value\n    var statusId = statusElement.value;\n\n    // if statusId does not equal 1, repeat the ajax call every 10 seconds that checks the training staus\n    // if statusId equals 1, stop the ajax call\n    if (statusId !== \"4\" && statusId !== \"1\") {\n        setInterval(function () {\n            var get_status = ajax.call([{\n                methodname: 'block_ai_assistant_get_question_training_status',\n                args: {\n                    'questionid': questionId\n                }\n            }]);\n\n            get_status[0].done(function (data) {\n                // Convert data from JSON to object\n                data = JSON.parse(data);\n                // Update the element value for element with id block-ai_assistant-training-status-id\n                document.getElementById('block-ai_assistant-question-training-status-id').value = data.training_status_id;\n                // Update the element value for element with id block-ai-assistant-training-status\n                document.getElementById('block-ai-assistant-question-training-status').innerHTML = data.training_status;\n                // Exit setInterval\n                if (data.training_status_id === 1) {\n                    clearInterval();\n                }\n            }).fail(function () {\n                alert('An error has occurred. Could not update the training status');\n            });\n        }, 5000);\n    }\n}"],"names":["e","_ajax","__esModule","default","_exports","init","document","getElementById","statusElement","courseId","getAttribute","statusId","value","setInterval","ajax","call","methodname","args","courseid","done","data","JSON","parse","training_status_id","innerHTML","training_status","clearInterval","fail","alert","get_training_status","questionId","questionid","get_question_training_status"],"mappings":"8FAA6B,IAAAA,+EAA7BC,OAA6BD,EAA7BC,QAA6BD,EAAAE,WAAAF,EAAAG,CAAAA,QAAAH,GAK3BI,SAAAC,KAHkBA,MAQpB,WAEI,IAAKC,SAASC,eAAe,yCACzB,OAGJ,IAAIC,cAAgBF,SAASC,eAAe,yCAExCE,SAAWD,cAAcE,aAAa,kBAEtCC,SAAWH,cAAcI,MAIZ,MAAbD,UAAiC,MAAbA,UACpBE,aAAY,WACSC,MAAAA,QAAKC,KAAK,CAAC,CACxBC,WAAY,yCACZC,KAAM,CACFC,SAAYT,aAIT,GAAGU,MAAK,SAAUC,MAEzBA,KAAOC,KAAKC,MAAMF,MAElBd,SAASC,eAAe,yCAAyCK,MAAQQ,KAAKG,mBAE9EjB,SAASC,eAAe,sCAAsCiB,UAAYJ,KAAKK,gBAE/C,IAA5BL,KAAKG,oBACLG,eAER,IAAGC,MAAK,WACJC,MAAM,8DACV,GACH,GAAE,IAEX,CA9CIC,GAmDJ,WAEI,IAAKvB,SAASC,eAAe,kDACzB,OAGJ,IAAIC,cAAgBF,SAASC,eAAe,kDAExCuB,WAAatB,cAAcE,aAAa,oBAExCC,SAAWH,cAAcI,MAIZ,MAAbD,UAAiC,MAAbA,UACpBE,aAAY,WACSC,MAAAA,QAAKC,KAAK,CAAC,CACxBC,WAAY,kDACZC,KAAM,CACFc,WAAcD,eAIX,GAAGX,MAAK,SAAUC,MAEzBA,KAAOC,KAAKC,MAAMF,MAElBd,SAASC,eAAe,kDAAkDK,MAAQQ,KAAKG,mBAEvFjB,SAASC,eAAe,+CAA+CiB,UAAYJ,KAAKK,gBAExD,IAA5BL,KAAKG,oBACLG,eAER,IAAGC,MAAK,WACJC,MAAM,8DACV,GACH,GAAE,IAEX,CAzFII,EAA8B,CAyFjC"}